[{"C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\ServiceProfile\\ServiceProfile.jsx":"1","C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\ServiceProfile\\ServicePage.jsx":"2","C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\index.js":"3","C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\navBar\\NavBar.jsx":"4","C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\lib\\FetchShortcuts.js":"5","C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\ServiceProfile\\AdminCalendar.jsx":"6"},{"size":2343,"mtime":1612630653287,"results":"7","hashOfConfig":"8"},{"size":1366,"mtime":1612644065907,"results":"9","hashOfConfig":"8"},{"size":567,"mtime":1612292360625,"results":"10","hashOfConfig":"8"},{"size":2597,"mtime":1612292360622,"results":"11","hashOfConfig":"8"},{"size":3855,"mtime":1611844104306,"results":"12","hashOfConfig":"8"},{"size":1011,"mtime":1612646571910,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"bw4q12",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\ServiceProfile\\ServiceProfile.jsx",["29","30","31","32","33","34","35","36","37"],"import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { GETFromProviders } from '../../lib/FetchShortcuts';\r\nimport serviceProfile from './serviceProfile.module.css';\r\nimport { BeautyProviders } from '../../lib/mockProviders';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button } from 'reactstrap';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nexport default function ServiceProfile({provider}) {\r\n  // const [provider, setProvider] = useState({});\r\n\r\n  // const { id } = useParams();\r\n  // const history = useHistory();\r\n  // useEffect(() => {\r\n  //   // for when we connect to backend\r\n  //   // GETFromProviders(`getById`, JSON.stringify(id) )\r\n  //   // let available = await  GETProviders available times\r\n  //   setProvider(BeautyProviders[0]);\r\n  // }, []);\r\n\r\n  const {\r\n    companyName,\r\n    bannerUrl,\r\n    availableServices,\r\n    closingHrs,\r\n    openingHrs,\r\n    description,\r\n    address,\r\n    type,\r\n    _id\r\n  } = provider;\r\n\r\n    let list = [<p key=\"bahehaeoe\">no services registered yet</p>]\r\n\r\n  if (availableServices && availableServices.length > 0) {\r\n    list = availableServices.map((result) => {\r\n      const { name, price, duration } = result;\r\n      return (\r\n          <div key={uuidv4()} className={serviceProfile.service}>\r\n            {name} at a cost of {price} shekels\r\n            {duration && ` for ${duration} minutes`}.\r\n          </div>\r\n      );\r\n    });\r\n  } else {\r\n    list = [<p key ='vnaein23'>no services registered yet</p>]\r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div className={serviceProfile.content}>\r\n        <div className={serviceProfile.data}>\r\n          <h2>\r\n            <b>{companyName}</b> ({type})\r\n          </h2>\r\n          <p>\r\n            <i>\r\n              Open from: {openingHrs} to {closingHrs}\r\n            </i>\r\n          </p>\r\n          <hr />\r\n          <p>{description}</p>\r\n          <br />\r\n          <h4>\r\n            <u>\r\n              <b>Services offered:</b>\r\n            </u>\r\n          </h4>\r\n          <div>{list}</div>\r\n          <br />\r\n          <p>\r\n            <b>Location:</b>\r\n            <em> {address}</em>\r\n          </p>\r\n        </div>\r\n        {/* <Calendar\r\n          provider={provider}\r\n        ></Calendar> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\ServiceProfile\\ServicePage.jsx",["38","39"],"C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\index.js",[],["40","41"],"C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\navBar\\NavBar.jsx",["42","43","44","45","46","47","48"],"import React, { useState, useEffect } from 'react';\r\nimport Login from '../Login';\r\nimport SignUp from '../Signup';\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  FormGroup,\r\n  Button\r\n} from 'reactstrap';\r\nimport { FontAwesome } from 'react-icons/fa';\r\nimport { FaUser } from 'react-icons/fa';\r\n//import './ProfileSettings.css';\r\nimport navBar from \"./navBar.module.css\";\r\nimport { POSTtoUsersUnhandled } from '../../lib/FetchShortcuts';\r\n\r\nfunction NavBar(props) { \r\n  const {user, passUser} = props\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  \r\n  const  handleLogout = async ( ) =>{\r\n    localStorage.clear()\r\n    const response = await POSTtoUsersUnhandled('log-out');\r\n    console.log('response: ', response);\r\n    //when we set user by cookie we'll delete this\r\n          window.location.reload();\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className={navBar.bar} expand=\"md\" light>\r\n        <NavbarBrand href=\"/Home\" style={{ fontSize: '34px' }}>\r\n          BookIt\r\n        </NavbarBrand>\r\n        <NavbarToggler />\r\n        {user && user.type !== 'provider' && (\r\n          <div>\r\n            <NavLink className={navBar.txt} href=\"/Apply\">\r\n              Register a Company\r\n            </NavLink>\r\n          </div>\r\n        )}\r\n        <Collapse navbar>\r\n          {user && (\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink className={navBar.txt} href=\"/search\">Find a Service</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          )}\r\n          {isAdmin && <div></div>}\r\n          <Nav className=\"mr-auto\" navbar></Nav>\r\n          {!user && (\r\n            <>\r\n              <Login passUser={(user) => passUser(user)} />\r\n              <span className={navBar.buttonSpan}>\r\n                <SignUp passUser={(user) => passUser(user)} />\r\n              </span>\r\n            </>\r\n          )}\r\n\r\n          {user && (\r\n            <>\r\n              <span className={navBar.buttonSpan}>\r\n                <button\r\n                  variant=\"info\"\r\n                  className={navBar.button}\r\n                  onClick={() => handleLogout()}\r\n                >\r\n                  Logout\r\n                </button>\r\n              </span>\r\n              <NavLink href=\"/ProfileSettings\" className={navBar.txt}>\r\n                {' '}\r\n                <FaUser className={navBar.txt} /> Profile\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\lib\\FetchShortcuts.js",[],"C:\\Users\\levda\\Desktop\\ITC\\Service_Booking\\Team-Frontend\\src\\components\\ServiceProfile\\AdminCalendar.jsx",[],{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":18},{"ruleId":"49","severity":1,"message":"53","line":2,"column":20,"nodeType":"51","messageId":"52","endLine":2,"endColumn":29},{"ruleId":"49","severity":1,"message":"54","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":18},{"ruleId":"49","severity":1,"message":"55","line":3,"column":20,"nodeType":"51","messageId":"52","endLine":3,"endColumn":29},{"ruleId":"49","severity":1,"message":"56","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":26},{"ruleId":"49","severity":1,"message":"57","line":6,"column":10,"nodeType":"51","messageId":"52","endLine":6,"endColumn":25},{"ruleId":"49","severity":1,"message":"58","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":16},{"ruleId":"49","severity":1,"message":"59","line":25,"column":5,"nodeType":"51","messageId":"52","endLine":25,"endColumn":14},{"ruleId":"49","severity":1,"message":"60","line":32,"column":5,"nodeType":"51","messageId":"52","endLine":32,"endColumn":8},{"ruleId":"49","severity":1,"message":"61","line":10,"column":10,"nodeType":"51","messageId":"52","endLine":10,"endColumn":18},{"ruleId":"49","severity":1,"message":"62","line":10,"column":20,"nodeType":"51","messageId":"52","endLine":10,"endColumn":31},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"49","severity":1,"message":"55","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"67","line":6,"column":3,"nodeType":"51","messageId":"52","endLine":6,"endColumn":12},{"ruleId":"49","severity":1,"message":"68","line":13,"column":3,"nodeType":"51","messageId":"52","endLine":13,"endColumn":13},{"ruleId":"49","severity":1,"message":"69","line":14,"column":3,"nodeType":"51","messageId":"52","endLine":14,"endColumn":12},{"ruleId":"49","severity":1,"message":"58","line":15,"column":3,"nodeType":"51","messageId":"52","endLine":15,"endColumn":9},{"ruleId":"49","severity":1,"message":"70","line":17,"column":10,"nodeType":"51","messageId":"52","endLine":17,"endColumn":21},{"ruleId":"49","severity":1,"message":"71","line":25,"column":19,"nodeType":"51","messageId":"52","endLine":25,"endColumn":29},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'GETFromProviders' is defined but never used.","'BeautyProviders' is defined but never used.","'Button' is defined but never used.","'bannerUrl' is assigned a value but never used.","'_id' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'Container' is defined but never used.","'NavbarText' is defined but never used.","'FormGroup' is defined but never used.","'FontAwesome' is defined but never used.","'setIsAdmin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]